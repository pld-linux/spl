--- spl-0.6.3/module/splat/splat-ctl.c~	2014-06-12 22:59:01.000000000 +0200
+++ spl-0.6.3/module/splat/splat-ctl.c	2015-03-30 21:10:25.522172731 +0200
@@ -49,6 +49,7 @@
 #include <linux/cdev.h>
 #include <linux/fs.h>
 #include <linux/uaccess.h>
+#include <linux/version.h>
 #include <sys/types.h>
 #include <sys/debug.h>
 #include "splat-internal.h"
@@ -457,7 +457,11 @@
 static long
 splat_unlocked_ioctl(struct file *file, unsigned int cmd, unsigned long arg)
 {
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,19,0)
+        unsigned int minor = iminor(file->f_path.dentry->d_inode);
+#else
         unsigned int minor = iminor(file->f_dentry->d_inode);
+#endif
 	int rc = 0;
 
 	/* Ignore tty ioctls */
@@ -499,7 +503,11 @@
 static ssize_t splat_write(struct file *file, const char __user *buf,
                          size_t count, loff_t *ppos)
 {
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,19,0)
+        unsigned int minor = iminor(file->f_path.dentry->d_inode);
+#else
         unsigned int minor = iminor(file->f_dentry->d_inode);
+#endif
 	splat_info_t *info = (splat_info_t *)file->private_data;
 	int rc = 0;
 
@@ -536,7 +544,11 @@
 static ssize_t splat_read(struct file *file, char __user *buf,
 		        size_t count, loff_t *ppos)
 {
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,19,0)
+        unsigned int minor = iminor(file->f_path.dentry->d_inode);
+#else
         unsigned int minor = iminor(file->f_dentry->d_inode);
+#endif
 	splat_info_t *info = (splat_info_t *)file->private_data;
 	int rc = 0;
 
@@ -570,7 +582,11 @@
 
 static loff_t splat_seek(struct file *file, loff_t offset, int origin)
 {
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,19,0)
+        unsigned int minor = iminor(file->f_path.dentry->d_inode);
+#else
         unsigned int minor = iminor(file->f_dentry->d_inode);
+#endif
 	splat_info_t *info = (splat_info_t *)file->private_data;
 	int rc = -EINVAL;
 
